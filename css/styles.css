body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

body {
  font-family: 'Montserrat', sans-serif;
  font-size: 16px;
}

.container {
  min-width: 320px;
  max-width: 100%;
  padding: 0 0;
  box-sizing: border-box;
  margin: 0 auto;
}

.wrap {
  min-width: 320px;
  max-width: 1200px;
  padding: 0 15px;
  box-sizing: border-box;
  margin: 0 auto;
}

p {
  color: #000;
}

.top {
  border-bottom: 6px solid #f3ebdc;
  padding: 30px 0;
  width: 100%;
  z-index: 200;
  background-color: #fff;
}

.top .top__wrap {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
}

.top .top__menu {
  -webkit-flex-basis: 58%;
  flex-basis: 58%;
}

.menu ul {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
}

.menu a {
  font-size: 12px;
  line-height: 12px;
  font-weight: 300;
  text-decoration: none;
  color: #000;
  border-bottom: 1px solid transparent;
  letter-spacing: 0.96px;
  margin: 0 3px;
}

.menu a:hover {
  border-color: #000;
}

.icons {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
}

.icons .cart {
  margin: 0 12px;
}

.icons .search {
  margin-left: 12px;
}

.slider {
  background: -webkit-gradient(linear, left top, right top, from(#cdced2), to(#c5c6ca));
  background: -webkit-linear-gradient(left, #cdced2, #c5c6ca);
  background: linear-gradient(90deg, #cdced2, #c5c6ca);
}

.slider .slider__item {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  padding: 0 25px;
  box-sizing: border-box;
}

.slider .slider__item .slider__img {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 5px;
  margin-right: 5px;
  width: calc(50% - 10px);
}

.slider .slider__item .slider__img img {
  display: block;
  max-width: 100%;
}

.slider .slider__item .slider__info {
  -webkit-flex-basis: 50%;
  flex-basis: 50%;
  padding-left: 70px;
  box-sizing: border-box;
}

.slider .slider__item .slider__info p {
  font-size: 14px;
  line-height: 26px;
  color: #535353;
  margin: 25px 0;
}

.slider .slider__item .slider__info .slider__title {
  font-weight: 600;
  font-size: 116px;
  color: #171717;
  letter-spacing: 2.32px;
  line-height: 107px;
  text-transform: uppercase;
}

.slider .slider__item .slider__info .slider__type {
  color: #171717;
  line-height: 25px;
  font-size: 18px;
  font-weight: 600;
}

.slider .slider__item .slider__info .slider__type span {
  font-size: 14px;
  letter-spacing: 1.12px;
  margin-left: 25px;
  font-weigth: 300;
}

.slider .slider__item .slider__info .slider__icons {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 25px 0;
}

.slider .slider__item .slider__info .slider__icons a {
  height: 37px;
  width: 37px;
  border: 1px solid #000;
  border-radius: 50%;
  margin: 0 20px;
  position: relative;
}

.slider .slider__item .slider__info .slider__icons a img {
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

.slider .slider__item .slider__info .slider__icons a:first-of-type {
  background-color: #191919;
  margin-left: 0px;
}

.slider .slider__item .slider__info .slider__icons a:first-of-type img {
  -webkit-transform: translate(-30%, -50%);
  -ms-transform: translate(-30%, -50%);
  transform: translate(-30%, -50%);
}

.slider .slider__item .slider__info .slider__icons a:last-of-type {
  margin-right: 0px;
}

.slider .slider__item .slider__info .slider__btn {
  background-color: #191919;
  font-size: 9px;
  letter-spacing: 0.54px;
  line-height: 13px;
  border-radius: 40px;
  width: 114px;
  color: #fff;
  padding: 13px 0;
  display: block;
  text-align: center;
  text-transform: uppercase;
  margin: 25px 0;
  text-decoration: none;
}

.slider .slider__item .slider__info .slider__btn:hover {
  background-color: #3d3d3d;
}

.slider .owl-nav button.owl-prev,
.slider .owl-nav button.owl-next {
  background: url("../../img/sprite-arrow.png") 0 0 no-repeat;
  width: 49px;
  height: 49px;
  border: none;
  box-shadow: none;
  position: absolute;
  left: 5px;
  top: 50%;
  cursor: pointer;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.slider .owl-nav button.owl-prev:hover,
.slider .owl-nav button.owl-next:hover {
  background-position-y: -49px;
}

.slider .owl-nav button.owl-next {
  background-position: -49px 0;
  left: auto;
  right: 5px;
}

.content {
  margin-top: 40px;
}

.categories ul {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 40px 0;
}

.categories ul li {
  margin: 10px 23px;
  font-size: 19px;
  letter-spacing: 1.9px;
  line-height: 20px;
  font-weight: 600;
}

.categories ul li a {
  text-decoration: none;
  color: #171717;
  border-bottom: 1px solid transparent;
}

.categories ul li a:hover {
  border-bottom-color: #181818;
}

.banner {
  background: url("../../img/banner1.jpg") #00b7d9 no-repeat left center;
  margin-bottom: 25px;
  background-size: cover;
  padding: 45px 0;
  margin-left: 5px;
  margin-right: 5px;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}

.banner .banner__info {
  -webkit-flex-basis: 630px;
  flex-basis: 630px;
  text-align: center;
  margin-right: 50px;
}

.banner .banner__info .banner__title {
  font-size: 25px;
  font-weight: 800;
  letter-spacing: 1.2px;
  line-height: 35px;
  text-transform: uppercase;
  margin-bottom: 10px;
}

.banner .banner__info p {
  text-transform: uppercase;
  line-height: 20px;
  letter-spacing: 2.4px;
  font-size: 15px;
  font-weight: 500;
}

.banner .banner__info a {
  background-color: #000;
  font-size: 9px;
  letter-spacing: 0.54px;
  line-height: 13px;
  border-radius: 40px;
  width: 114px;
  color: #fff;
  padding: 13px 0;
  display: block;
  text-align: center;
  text-transform: uppercase;
  margin: 25px 0;
  text-decoration: none;
  margin: 0 auto;
  margin-top: 30px;
  width: 200px;
  padding: 20px 0;
  background-color: #fff;
  color: #000;
  font-weight: 600;
  letter-spacing: 1px;
  font-size: 10px;
}

.banner .banner__info a:hover {
  background-color: #3d3d3d;
}

.product {
  margin: 50px 0;
}

.product .product__title {
  font-size: 25px;
  letter-spacing: 1px;
  font-weight: 600;
  line-height: 30px;
  text-align: center;
  text-transform: uppercase;
}

.product p {
  text-align: center;
  margin: 20px 0;
  letter-spacing: 4px;
  font-weight: 500;
}

.product .product__wrap {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
}

.product .product__wrap .product__item {
  margin: 40px 0;
  position: relative;
  -webkit-flex-basis: 31.5%;
  flex-basis: 31.5%;
  display: block;
}

.product .product__wrap .product__item img {
  width: 100%;
}

.product .product__wrap .product__item a {
  position: absolute;
  background-color: #000;
  font-size: 9px;
  letter-spacing: 0.54px;
  line-height: 13px;
  border-radius: 40px;
  width: 114px;
  color: #fff;
  padding: 13px 0;
  display: block;
  text-align: center;
  text-transform: uppercase;
  margin: 25px 0;
  text-decoration: none;
  width: 160px;
  border-radius: 60px;
  font-size: 15px;
  line-height: 20px;
  letter-spacing: 1px;
  padding: 20px 10px;
  bottom: 10px;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.product .product__wrap .product__item a:hover {
  background-color: #3d3d3d;
}

.featured .featured__title {
  text-align: center;
  text-transform: uppercase;
  font-size: 20px;
  line-height: 25px;
  letter-spacing: 1.2px;
  font-weight: 700;
}

.featured .featured__categories {
  margin-bottom: 30px;
}

.featured .featured__itemwrap {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -5px;
  margin-right: -5px;
  margin-bottom: 40px;
}

.featured__item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 5px;
  margin-right: 5px;
  width: calc(25% - 10px);
}

.featured .featured__itemwrap .featured__item img {
  display: block;
  margin-bottom: 25px;
}

.featured .featured__itemwrap .featured__item:first-child img {
  margin-bottom: 27px;
}

.featured .featured__itemwrap .featured__item p {
  margin: 5px 0;
}

.featured .featured__itemwrap .featured__item .featured__name {
  font-weight: 800;
}

.featured .featured__itemwrap .featured__item .featured__cost {
  font-weight: 600;
}

.featured .featured__itemwrap .featured__item .featured__cost span {
  font-weight: 300;
  text-decoration: line-through;
}

.featured .featured__btn {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-flex-basis: 100%;
  flex-basis: 100%;
}

.featured .featured__btn a {
  background-color: #000;
  font-size: 9px;
  letter-spacing: 0.54px;
  line-height: 13px;
  border-radius: 40px;
  width: 114px;
  color: #fff;
  padding: 13px 0;
  display: block;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
  width: 150px;
  padding: 15px 0;
  background-color: #fff;
  color: #000;
  border: 2px solid #000;
  font-weight: 600;
  font-size: 11px;
  line-height: 20px;
}

.featured .featured__btn a:hover {
  background-color: #3d3d3d;
}

.second__banner {
  margin: 50px 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: start;
  justify-content: start;
  background: url("../../img/banner2.jpg") no-repeat right center;
  background-color: #dcdcdc;
  background-size: cover;
}

.second__banner .second__banner__info {
  -webkit-flex-basis: 600px;
  flex-basis: 600px;
  padding-left: 0px;
  text-align: center;
}

.second__banner .second__banner__info .second__banner__title {
  font-weight: 700;
  font-size: 25px;
  text-transform: uppercase;
  margin: 20px 0;
  padding-top: 20px;
  line-height: 30px;
  letter-spacing: 1.8px;
}

.second__banner .second__banner__info p {
  font-weight: 400;
  text-transform: uppercase;
  letter-spacing: 2.6px;
  color: #fff;
}

.second__banner .second__banner__info a {
  background-color: #000;
  font-size: 9px;
  letter-spacing: 0.54px;
  line-height: 13px;
  border-radius: 40px;
  width: 114px;
  color: #fff;
  padding: 13px 0;
  display: block;
  text-align: center;
  text-transform: uppercase;
  margin: 25px 0;
  text-decoration: none;
  padding: 20px;
  font-size: 12px;
  margin: 40px auto;
}

.second__banner .second__banner__info a:hover {
  background-color: #3d3d3d;
}

.blog {
  margin-bottom: -160px;
}

.blog .blog__title {
  text-align: center;
  text-transform: uppercase;
  font-size: 20px;
  line-height: 25px;
  letter-spacing: 1.3px;
  font-weight: 700;
  margin-bottom: 60px;
}

.blog .blog__item__wrap {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
}

.blog .blog__item__wrap .blog__item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 5px;
  margin-right: 5px;
  width: calc(50% - 10px);
}

.blog .blog__item__wrap .blog__item img {
  display: block;
  width: 100%;
}

.blog .blog__item__wrap .blog__item .blog__item__info {
  margin: 0 auto;
  background-color: #fff;
  text-align: center;
  width: 80%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  padding: 20px;
}

.blog .blog__item__wrap .blog__item .blog__item__info .blog__item__info__title {
  text-transform: uppercase;
  font-weight: 700;
  font-size: 19px;
  line-height: 18px;
  letter-spacing: 0.9px;
}

.blog .blog__item__wrap .blog__item .blog__item__info p {
  margin: 7px;
  text-transform: lowercase;
  font-weight: 300;
  font-size: 14px;
}

.links {
  background-color: #f5f5f5;
}

.links .links__wrap {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  padding: 230px 10px 100px;
}

.links .links__wrap .links__item {
  -webkit-flex-basis: 20%;
  flex-basis: 20%;
  text-align: left;
}

.links .links__wrap .links__item .links__title {
  text-transform: uppercase;
  color: #000;
  font-weight: 700;
  font-size: 15px;
  line-height: 20px;
  letter-spacing: 1px;
  margin-bottom: 30px;
}

.links .links__wrap .links__item p {
  margin: 10px 0;
}

.links .links__wrap .links__item p a {
  letter-spacing: 1.2px;
  text-decoration: none;
  color: #000;
  border-bottom: 1px solid transparent;
}

.links .links__wrap .links__item p a:hover {
  border-bottom: 1px solid #000;
}

.links .links__wrap .links__item p span {
  font-weight: 800;
}

.links .links__wrap .links__item:last-child p:last-child {
  margin-top: 35px;
}

.footer {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
}

.footer p {
  -webkit-flex-basis: 100%;
  flex-basis: 100%;
  text-align: center;
  margin-top: 160px;
}

.footer img {
  display: block;
  margin: 40px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

@media (max-width: 1500px) {
  .slider .slider__item .slider__info .slider__title {
    font-size: 70px;
    line-height: 80px;
  }
}

@media (max-width: 1300px) {
  .slider .slider__item .slider__info .slider__title {
    font-size: 60px;
    line-height: 65px;
  }
}

@media (max-width: 1050px) {
  .banner {
    background-image: none;
    -webkit-flex-basis: 100%;
    flex-basis: 100%;
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    margin: 0 auto;
  }

  .banner .banner__info {
    margin: 0;
  }
}

@media (max-width: 1000px) {
  .slider .slider__item .slider__img {
    display: none;
  }

  .slider .slider__item .slider__info {
    -webkit-flex-basis: 100%;
    flex-basis: 100%;
    padding: 0 0;
  }
}

@media (max-width: 960px) {
  .categories ul li {
    margin: 5px 15px;
  }
}

@media screen and (max-width: 920px) {
  .featured__item {
    width: calc(50% - 10px);
  }

  .featured .featured__itemwrap .featured__item img {
    width: 100%;
  }
}

@media (max-width: 920px) {
  .product .product__wrap {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }

  .product .product__wrap .product__item {
    -webkit-flex-basis: 48%;
    flex-basis: 48%;
    margin: 10px 1%;
  }
}

@media (max-width: 768px) {
  .top .top__left {
    -webkit-flex-basis: 100%;
    flex-basis: 100%;
    text-align: center;
    margin-bottom: 15px;
  }

  .top .top__menu {
    -webkit-flex-basis: 80%;
    flex-basis: 80%;
  }
}

@media screen and (max-width: 720px) {
  .blog .blog__item__wrap .blog__item .blog__item__info {
    padding: 10px;
  }
}

@media (max-width: 576px) {
  .product {
    margin: 20px 0;
  }

  .product .product__wrap {
    justify-direction: column;
  }

  .product .product__wrap .product__item {
    -webkit-flex-basis: 100%;
    flex-basis: 100%;
    margin: 10px 1%;
  }
}

@media screen and (max-width: 576px) {
  .featured__item {
    width: calc(100% - 10px);
  }

  .blog .blog__item__wrap .blog__item {
    width: calc(100% - 10px);
  }
}

@media (max-width: 540px) {
  .slider .slider__item .slider__info .slider__title {
    font-size: 30px;
    line-height: 40px;
    letter-spacing: 1px;
  }

  .slider .slider__item .slider__info .slider__title p {
    font-size: 13px;
  }
}

@media (max-width: 480px) {
  .top .top__menu {
    -webkit-flex-basis: 100%;
    flex-basis: 100%;
    margin-bottom: 15px;
  }

  .top .top__right {
    -webkit-flex-basis: 100%;
    flex-basis: 100%;
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }
}

@media (max-width: 325px) {
  .menu a {
    font-size: 10px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
